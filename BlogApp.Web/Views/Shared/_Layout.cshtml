<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - BlogApp</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/themes/base/jqueryui")
</head>
<body>


    <div class="navbar navbar-inverse navbar-fixed-top">

        <div class="container">

            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("BlogApp", "Home", "User", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav" style="float:left">
                    <li>@Html.ActionLink("Home", "Home", "User")</li>

                    @if (Session["Login"] != null && ((BlogApp.Models.User)Session["Login"]).Roles.Any(r => r.Type == BlogApp.Models.RoleType.Administrator))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Users <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Add new user", "AddUser", "User")</li>
                                <li>@Html.ActionLink("Users information", "List", "User")</li>
                            </ul>
                        </li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Videos <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Import video", "ImportVideos", "Video")</li>
                                <li>@Html.ActionLink("List video", "List", "Video")</li>
                            </ul>
                        </li>

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Reports <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Article distribution per month by year", "QueryByMonthPerYear", "Report")</li>
                                <li>@Html.ActionLink("Audit log", "QueryLoginSearch", "Report")</li>
                                <li>@Html.ActionLink("Ranking for most active users", "QueryRankingMostActive", "Report")</li>
                            </ul>
                        </li>
                    }
                    @if (Session["Login"] != null && ((BlogApp.Models.User)Session["Login"]).Roles.Any(r => r.Type == BlogApp.Models.RoleType.Blogger))
                    {

                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Articles <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Create article", "CreateArticle", "Article", new { Id = ((BlogApp.Models.User)Session["Login"]).Id }, null)</li>
                                <li>@Html.ActionLink("My articles", "MyArticles", "Article", new { Id = ((BlogApp.Models.User)Session["Login"]).Id }, null)</li>
                            </ul>
                        </li>
                    }
                </ul>


                @using (Html.BeginForm("SearchArticle", "Article", FormMethod.Get, new { @class = "navbar-form navbar-left", role = "Search"}))
                {
                        <div class="form-group">
                            @Html.TextBox("searchText", null, new { @class = "form-control", placeholder = "Search article" })
                        </div>
                    <button type="submit" class="btn btn-default">Submit</button>
                }


                <ul class="nav navbar-nav" style="float: right">
                    <li>@Html.ActionLink("Edit profile", "Edit", "User", new { Id = ((BlogApp.Models.User)Session["Login"]).Id }, null)</li>
                    <li>@Html.ActionLink("Log out", "LogOut", "User")</li>
                    @if (Session["Login"] != null && ((BlogApp.Models.User)Session["Login"]).Roles.Any(r => r.Type == BlogApp.Models.RoleType.Blogger))
                    {
                        <li><a href="@Url.Action("UnreadComments", "Article")">
                            <img class="notification-bell" src="@Url.Content("/Content/bell.png")" /><div id="notification" class="circle"></div>
                        </a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        <div class="row">
            <div class="col-lg-9">
                @RenderBody()
            </div>
            <div class="col-lg-3">
                @Video.Silverlight(
                path: @Url.Content("/ClientBin/BlogApp.VideoPlayer.xap"),
                width: "300",
                height: "300",
                bgColor: "red",
                autoUpgrade: true, options: new { windowless = "true" })
            </div>
        </div>

        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Alejandro Alvarez - Pablo Pérez - Diego Rocca</p>
        </footer>
    </div>




    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    @if (Session["Login"] != null && ((BlogApp.Models.User)Session["Login"]).Roles.Any(r => r.Type == BlogApp.Models.RoleType.Blogger))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                (function doStuff() {
                    $.get("/article/GetNotificationCount", function (data) {
                        $('#notification').text(data);
                    }).always(function () {
                        setTimeout(doStuff, 1);
                    });;

                }());

            });
        </script>
                    }
</body>
</html>
